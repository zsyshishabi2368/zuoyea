RBAC支持三个著名的安全原则:最小权限原则，责任分离原则和数据抽象原则。 (1)最小权限原则之所以被RBAC所支持，是因为RBAC可以将其角色配置成其完成任务所需要的最小的权限集。
(2) 责任分离原则可以通过调用相互独立互斥的角色来共同完成敏感的任务而体现，比如要求一个计帐员和财务管理员共参与同一过帐。 
(3)数据抽象可以通过权限的抽象来体现，如财务操作用借款、存款等抽象权限，而不用操作系统提供的典型的读、写、执行权限。然而这些原则必须通过RBAC各部件的详细配置才能得以体现。
3.基本概念： RBAC认为权限授权实际上是Who、What、How的问题。在RBAC模型中，who、what、how构成了访问权限三元组,也就是"Who对What(Which)进行How的操作"。
Who:权限的拥用者或主体(如Principal、User、Group、Role、Actor等等)。 What:权限针对的对象或资源(Resource、Class)。 How:具体的权限(Privilege,正向授权与负向授权)。
Role:角色，一定数量的权限的集合。权限分配的单位与载体,目的是隔离User与Privilege的逻辑关系。 4. 然后 RBAC 又分为RBAC0、RBAC1、RBAC2、RBAC3 。
简单介绍： RBAC0：是RBAC的核心思想. 主要由四部分组成：用户（User）、角色（Role）、许可（Permission）和会话（Session） RBAC1：是把RBAC的角色分层模型。
RBAC1引入了角色继承的概念，有继承就有上下级的包含关系。 RBAC2：增加了RBAC的约束模型。 
RBAC2是基于RBACO扩展的，主要引入了SSD（静态职责分离）和DSD(动态职责分离) ssD主要应用在用户和角色之间（授权阶段），主要约束: 1、互斥角色，同一个用户不能授予互斥关系的角色，
如:不能同时授予会计和出纳的角色。
2、基数约束，一个用户拥有的角色是有限的，一个角色拥有的许可是有限的。 
3、先决条件约束，用户想得到高级权利，必须先拥有低级权利。 DSD会话和角色之间的约束，主要动态决定怎么样计划角色，如:一个用户拥有5个角色，只激活2个。
RBAC3：其实是RBAC2 + RBAC1
